进程记作业管理
Uninterruptible sleep : 不可中断的睡眠
Interruptible sleep : 可中断睡眠

kernel 首先生成第一个进程叫init
然后init负责生成后面的所有进程，所以其他所有进程的父进程都是init

进程包含线程

进程的分类:
1.跟终端相关的进程
2.跟终端无关的进程

---------------------------------------------------------------
进程优先级:（数字越小，优先级越高）
100 - 139 : 是用户可控制
0 - 99 : 内核调整的

从进程队列中挑选一个进程的算法有这么几种：
O 算法：
   O(1)
   O(n)
   O(logn)
   O(n^2)
   

优先级高有什么意义:
1.获得更多的CPU运行时间
2.更优先获得运行的机会

每个进程都有一个nice值，nice值是从（-20 ~ 19）
                  分别对应优先级(100 ~ 139)
                  所以nice值越小，优先级越高

注意：普通用户仅仅能调大nice值
---------------------------------------------------------------

---------------------------------------------------------------
PID: PROCESS ID 进程号
init: 父进程（进程号永远为 1）

在 /proc 目录下都有一个以进程号命名的目录，该目录代表一个进程

进程相关的命令
=================================================================
ps : 进程状态 PROCESS STATE
     分为两种风格:
         SysV风格: - 
         BSD风格: 
     支持的选项:
         BSD风格下: 
            a: 所有与终端有关的进程
            u: 表明是哪个用户启动的进程
            x: 所有与终端无关的进程
         SysV风格下:
            -elF:
            -ef :
            -eF :
            -o PROPERTY1,PROPERTY2,... : 指定字段显示进程信息
     进程的状态有这几种:
        D : 不可中断的睡眠
        R : 运行或就绪
        S : 可中断的睡眠
        T : 停止
        Z : 僵死
        
        < : 高优先级的进程
        N : 低优先级的进程
        + : 前台进程(终端进程)组中进程
        l : 多线程进程
        s : 会话进程首进程
        
     举个例子：当我们用ps命令查看状态的时候: ps aux 会出现下面的样子
     ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
     USER     PID   %CPU          %MEM             VSZ         RSS      TTY            STAT     START       TIME                          COMMAND
     root     2     0.0            0.1             2164        608       ?              Ss      09:12       0.02                          [migration/0] 
      |       |      |              |                |          |        |               |        |           |                                 |
   进程的用户  进程ID  占用CPU百分比   占据物理内存的百分比  虚拟内存集  常驻内存集  跟哪个终端相关联   进程状态   进程启动时间  进程运行时长（真正占据CPU的时长）   使用哪个命令启动该进程的（带[]号的表示内核线程）

pstree : 显示当前进程树
pgrep  : 根据匹配模式查找进程
pidof  : 根据程序名称查找某个进程的ID号 ,例如:  pidof init
top    : 监控进程信息(以下是是交互式命令)
         M 键 : 根据驻留内存大小进行排序
         P 键 : 根据CPU使用百分比进行排序
         T 键 : 根据累计时间进行排序
         
         l 键 : 是否显示平均负载和启动时间
         t 键 : 是否显示进行和CPU状态相关信息
         m 键 : 是否显示内存相关信息
         
         c 键 : 是否显示完整的命令行信息
         q 键 : 退出top
         k 键 : 终止某个进程
         
         top也支持一些选项:
            -d # : 指定刷新时长，每个#秒刷新一次
            -b   : 表示以批模式刷新(会一屏一屏往下翻)
            -n # : 在批模式下只显示#屏
vmstat : 系统状态查看命令
free   : 监控内存的使用情况
kill   : 用于杀进程
         kill PID
         killall COMMAND
pkill  :
bg     : 详情见下面
fg     : 详情见下面
uptime : 跟top命令第一行是一样的
=================================================================
-----------------------------------------------------------------
进程间通信（IPC : Inter Process Communication）
   主要有这几种方式:
      1. 共享内存
      2. 信号       :signal
                    重要的信号:
                       1  : SIGHUP   --> 让一个进程不用重启就能重读其配置文件，并且让新的配置信息生效
                       2  : SIGINT   --> 相当于CTRL+c , 表示终断一个进程
                       9  : SIGKILL  --> 杀死一个进程
                       15 : SIGTERM  --> 终止一个进程(默认信号)
                    
                    调用一个信号的方式:
                        使用号码: 例如, kill -1
                        使用名称: 例如, kill -SIGKILL
                        使用名称简写(就是名称去掉SIG): 例如, kill -HUP 
                    注意：kill默认调用15号信号,所以杀死一个进程可以使用kill PID D 的方式  
      3. semaphore : 旗语
-----------------------------------------------------------------
调整进程的nice值:
1.调整已经启动的进程的nice值:
   renice NI PID : 例如,renice 3 2480

2.在启动命令时指定nice值:
   nice -n NI COMMAND
-----------------------------------------------------------------
前台作业: 是指占据了命令提示符
后台作业: 是指启动之后，释放命令提示符，后续的操作在后台完成

将前台作业 --> 后台:
   1. Ctrl+z    : 把正在前台的作业送往后台 
   2. COMMAND & : 让命令在后台执行

让后台的作业重新调回前台来
   fg [%JOBID] : 

让后台停止的作业继续运行:
   bg [%JOBID] : 如果省略JOBID的话，默认运行带+号的作业号

jobs : 查看后台的所有作业
       每个作业都有一个作业号，作业号不同于进程号
       + : 命令将默认操作的作业
       - : 命令将第二个默认操作的作业

kill %JOBID : 终止某作业
-----------------------------------------------------------------
/proc/meminfo : 这个文件包含内存的相关信息




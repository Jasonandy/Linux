硬盘管理:

机械式硬盘
   U盘、光盘、软盘、硬件、磁带

ln [-s -v] SOURCE DEST
            |      |------------------> 创建的链接
            |--------------> 源文件
            
硬链接：（不同路径指向同一个inode）
   1、硬链接只能对文件创建，不能运用到目录
   2、不能跨文件系统
   3、创建硬链接会增加文件被链接的次数
   
符号链接：（一个文件的inode保存的是另外一个文件的路径）
   1、可运用于目录
   2、可以跨文件系统
   3、不会增加被链接文件链接的次数
   4、其大小为指定的路径所包含的字符个数

du:
   1．命令格式：
      du [选项][文件]
   2．命令功能：
      显示每个文件和目录的磁盘使用空间。
   3．命令参数：
      -a或-all  显示目录中个别文件的大小。   
      -b或-bytes  显示目录或文件大小时，以byte为单位。   
      -c或--total  除了显示个别目录或文件的大小外，同时也显示所有目录或文件的总和。 
      -k或--kilobytes  以KB(1024bytes)为单位输出。
      -m或--megabytes  以MB为单位输出。   
      -s或--summarize  仅显示总计，只列出最后加总的值。
      -h或--human-readable  以K，M，G为单位，提高信息的可读性。
      -x或--one-file-xystem  以一开始处理时的文件系统为准，若遇上其它不同的文件系统目录则略过。 
      -L<符号链接>或--dereference<符号链接> 显示选项中所指定符号链接的源文件大小。   
      -S或--separate-dirs   显示个别目录的大小时，并不含其子目录的大小。 
      -X<文件>或--exclude-from=<文件>  在<文件>指定目录或文件。   
      --exclude=<目录或文件>         略过指定的目录或文件。    
      -D或--dereference-args   显示指定符号链接的源文件大小。   
      -H或--si  与-h参数相同，但是K，M，G是以1000为换算单位。   
      -l或--count-links   重复计算硬件链接的文件。

df : 查看硬盘分区情况
   1．命令格式：
      df [选项] [文件]
   2．命令功能：
      显示指定磁盘文件的可用空间。如果没有文件名被指定，则所有当前被挂载的文件系统的可用空间将被显示。默认情况下，磁盘空间将以 1KB 为单位进行显示，除非环境变量 POSIXLY_CORRECT 被指定，那样将以512字节为单位进行显示
   3．命令参数：
      必要参数：
      -a 全部文件系统列表
      -h 方便阅读方式显示
      -H 等于“-h”，但是计算式，1K=1000，而不是1K=1024
      -i 显示inode信息
      -k 区块为1024字节
      -l 只显示本地文件系统
      -m 区块为1048576字节
      --no-sync 忽略 sync 命令
      -P 输出格式为POSIX
      --sync 在取得磁盘信息前，先执行sync命令
      -T 文件系统类型
      选择参数：
      --block-size=<区块大小> 指定区块大小
      -t<文件系统类型> 只显示选定文件系统的磁盘信息
      -x<文件系统类型> 不显示选定文件系统的磁盘信息
      --help 显示帮助信息
      --version 显示版本信息
   
设备文件
   b : 按块为单位，随机访问的设备
   c : 按字符问单位，线性设备
   
   b : 硬盘
   c : 键盘
   
/dev
   主设备号 (major number)
      标识设备类型
   次设备号 (minor number)
      标识同一种类型中的不同设备

mknod : 创建设备文件
   mknod [OPTION] ... NAME TYPE [MAJOR MINOR]
      -m MODE (在创建设备文件的同时，指定权限) 例如 : mknod -m 640 mydev b 66 0
      
硬盘设备的设备文件名：
IDE , ATA :一般以hd开头
SATA : 一般以 sd 开头
SCSI : 一般以 sd 开头
USB  : 一般以 sd 开头

IDE :
   第一个IDE口 : 主、从
      /dev/sda, /dev/sdb
   第二个IDE口 : 主、从
      /dev/sdc, /dev/sdd

hda:
   hda1:第一个主分区
   hda2:------------\
   hda3:             ----> 可能是主分区，可能是扩展分区
   hda4:------------/
   hda5:第一个逻辑分区
      
查看当前系统识别的分区
fdisk -l [/dev/to/some_device_files]

管理磁盘分区
fdisk /dev/sda
   p:显示当前硬盘分区
   n:创建新分区
      e:扩展分区
      p:主分区
   d:删除一个分区
   w:保存退出
   q:不保存退出
   t:修改分区类型（指的是文件系统类型）后面加L显示支持的所有类型
   l:显示支持的所有类型
   
partprobe [/dev/sda] 通知内核重新读取分区表(/etc/proc/partitions)

文件系统管理
重新创建文件系统会损坏原有文件

mkfs: make file system
   -t FSTYPE             例如：mkfs -t ext3 /dev/sda5

/proc/filesystems : 系统支持的文件系统

mkfs -t ext2 <==> mkfs.ext2
mkfs -t ext3 <==> mkfs.ext3

专门管理ext系列文件
mke2fs
   -j : 创建ext3类型文件系统
   -b BLOCK_SIZE : 指定块大小，默认为4096 可用取值为1024、2048、4096
   -L LABLE : 指定分区卷标
   -m # : 指定预留给超级用户使用的块数百分比
   -i # : 用于指定为多少字节的空间创建一个inode，默认为8192，这里给出的数值应该为块大小的2^n倍
   -N # : 指定inode个数
   -F : 强制创建文件系统
   -E : 用于指定额外的文件系统属性
   
blkid:查询或查看磁盘设备的相关属性
   UUID : 显示UUID
   TYPE : 显示文件系统类型
   LABEL: 显示卷标
   
e2label:用于查看或定义卷标
   e2label 设备文件 卷标 ====> 用于设定卷标
   
tune2fs : 调整文件系统的相关属性
   -j : 不损坏原有数据将ex2升级为ex3
   -L LABEL: 设定或修改卷标
   -m # : 调整预留百分比
   -r # : 指定预留块数
   -o : 设定默认挂载选项
         acl
   -c # : 指定挂载次数达到#次之后，进行自检，0或者-1关闭此功能  
   -i # : 每挂载使用多少天之后进行自检，0或者-1关闭此功能
   -l : 显示超级块中的信息
   
dumpe2fs : 显示文件系统相关信息
   -h : 只显示超级块信息

fsck : 检查并修复Linux文件系统
   -t FSTYPE : 指定文件系统类型 
   -a : 自动修复

e2fsck :  专用于修复ext2/ext3文件系统
   -f : 强制检查
   -p : 自动修复
   

----------------挂载-------------------
挂载:将新的文件系统关联至当前根文件系统
卸载:将某文件系统与当前根文件系统的关联关系给以移除

mount : 挂载命令
mount 设备 挂载点
    设备可以是:
      设备文件:例如，/dev/sda5
      卷标 : 例如,LABEL=""
      UUID : 例如, UUID=""
   
   挂载点:目录
      要求:
         1、此目录没有被其他进程使用
         2、目录得事先存在
         3、目录中原有的文件将会被暂时隐藏
         
一旦挂载完成，要通过挂载点访问对应文件系统上的文件

mount : 不带参数的时候，显示当前系统已经挂载的设备及挂载点( cat /proc/mounts 是同样的功能)
mount [OPTION] [-o OPTION] DEVICE MOUNT_POINT
      -a : 表示挂载/etc/fstab文件中定义的所有文件系统
      -n : 默认情况下,mount命令每挂载一个设备,都会把挂载的信息保存到/etc/mtab文件中,使用-n选项意味着挂载设备时,不把信息写入此文件
      -t FSTYPE : 指定正在挂载设备上的文件系统类型,不使用此选项，mount会调用blkid命令获取对应文件系统的类型
      -r : 只读挂载，挂载光盘常用此选项
      -w : 读写挂载
      
      -o : 指定额外的文件系统挂载属性,也即指定文件系统启用属性
         async : 异步写入
         remount : 重新挂载当前文件系统  例如：mount -o remount,ro /dev/sda5 ：remount重新挂载的时候，后面的选项用逗号分隔
         ro : 挂载为只读
         rw : 挂载为读写
         loop : 挂载本地回环设备 例如挂载一个镜像文件，可以这样，mount -o loop /root/xxx.iso /media
      
umount : 卸载某文件系统
   umount 设备
   umount 挂载点
   
   卸载注意事项：
      1、卸载的设备没有被进程使用

---------------swap 分区---------------

free : 查看当前系统物理内存与虚拟内存的使用情况
   -m : 以单位M来显示

fdisk 命令中，创建分区的时候，调整分区类型为82

创建交换分区文件系统
mkswap 设备
   -L LABEL : 卷标

swapon  设备文件 : 启用交换分区
   -a : 启动所有定义在/etc/fstab文件中的交换设备
swapoff 设备文件 : 关闭交换分区



当我们的磁盘用满了，不可能再去格式化出交换分区，而此时我们的物理内存又不够用，我们该怎么办呢？

回环设备:
loopback，使用软件来模拟实现硬件
创建一个镜像文件，然后将其作为设备来格式化成交换分区，并且创建好交换分区文件系统，将这个设备再挂载到根下面，然后用启动命令启动，来使用，作为应急.

dd命令:（复制数据流）
   if= : INPUT FILE 数据来源
   of= : OUTPUT FILE 数据存储目标
   bs= : 指定每一次复制多少个字节,例如bs=1024 表示每一次复制1024个字节
   count : 一共复制多少个这样的单位，例如count=2 一共复制2个单位,结合上面，就是复制每个单位1024个字节，共两个单位，一起2048个字节
   seek : 创建数据文件的时候，跳过的空间大小

例如：dd if=/dev/sda of=/mnt/usb/mbr.backup bs=512 count=1 这个就相当于备份设备的MBR
     dd if=/mnt/usb/mbr.backup of=/dev/sda  bs=512 count=1 还原设备的MBR

    

-------------文件系统配置文件----------------
/etc/fstab : 文件系统配置文件
             os在初始化时，会自动挂载此文件中定义的每个文件系统
             
该文件中个字段的信息:

设备          挂载点         文件系统类型     挂载选项     转储频率(每多少天做一次备份)    文件系统检测次序(只有根可以为1,0表示不检查)
/dev/sda5    /mnt/test       ext3         defaults             0                       0

使用mount -a : 表示挂载/etc/fstab文件中定义的所有文件系统
   

fuser : 验证进程正在使用的文件或套接字文件
   -v : 查看某文件上正在运行的进程
   -k : 杀掉正在访问此文件的进程
   -m : 如果是kill挂载点的进程的话，要加此选项，通常kill访问挂载点的进程，需要-m与-k联合起来使用

   一般使用  fuser -km MOUNT_POINT : 终止访问此挂载点的所有进程
   

   